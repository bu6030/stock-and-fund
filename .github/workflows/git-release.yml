name: Git Release CI

on:
  push:
    branches: [ "master", "release/1.8.0" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Get Current Date
      id: date
      run: echo "::set-output name=date::$(date +'%y%m%d%H%M')"

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Get Branch Name
      id: get_branch_name
      run: echo "::set-output name=branch_name::$(echo $line | grep 'SNAPSHOT' pom.xml | awk '{split($0,a,"-"); print a[1]}'| awk '{split($0,a,">"); print a[2]}')"

    - name: Build with Maven
      run: mvn -B package --file pom.xml

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ steps.get_branch_name.outputs.branch_name }}-${{ steps.date.outputs.date }}
#        release_name: Release ${{ steps.get_branch_name.outputs.branch_name }}-${{ steps.date.outputs.date }}
#        draft: false
#        prerelease: false
#
#    - name: Upload Release Asset Jar
#      id: upload-release-asset-jar
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: target/stock-and-fund-${{ steps.get_branch_name.outputs.branch_name }}-SNAPSHOT.jar
#        asset_name: stock-and-fund-${{ steps.get_branch_name.outputs.branch_name }}-SNAPSHOT.jar
#        asset_content_type: application/gzip
#
#    - name: Upload Release Asset DB
#      id: upload-release-asset-db
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: stock-and-fund.db
#        asset_name: stock-and-fund.db
#        asset_content_type: application/gzip

    - name: Install ssh-agent
      run: |
        eval "$(ssh-agent -s)"
        mkdir -p ~/.ssh
        echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa.key
        chmod 600 ~/.ssh/id_rsa.key
        ssh-add ~/.ssh/id_rsa.key
        echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
#    - name: Print SSH private key
#      run: cat ~/.ssh/id_rsa.key
#
#        echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
#        chmod 600 ~/.ssh/known_hosts
    - name: Upload file via SSH
      run: |
        ssh root@1.117.221.208
        scp target/stock-and-fund-${{ steps.get_branch_name.outputs.branch_name }}-SNAPSHOT.jar root@1.117.221.208:/opt/stock-and-fund/

#        ssh root@$SERVER_IP '/opt/stock-and-fund/deployment.sh'
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
