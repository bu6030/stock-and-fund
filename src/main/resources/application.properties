###### 设置数据源 ######
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.datasource.url=jdbc:sqlite:${sqllite.db.file}
spring.datasource.username=
spring.datasource.password=

#spring.session.timeout=86400s
server.servlet.session.timeout=86400s
server.servlet.session.cookie.name=stock-and-fund

###### 端口 ######
server.port=8080

###### web配置 ######
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

spring.thymeleaf.cache=false

spring.cache.type=simple

###### 每日定期备份数据库文件 ######
send.db.mail.task.enable=false
mail.username=${mail-username:需要再配置}
mail.password=${mail-password:需要再配置}
mail.smtp-port=${mail-smtp-port:需要再配置}
mail.smtp-host=${mail-smtp-host:需要再配置}
mail.to-address=${mail-to-address:需要再配置}
mail.db-real-path=${mail-db-real-path:需要再配置}

###### 配置图片url ######
my.image.path=${my-image-path:需要再配置}

#jwt.auth.converter.resource-id=springboot-keycloak-client
#jwt.auth.converter.principal-attribute=preferred_username

logging.level.org.springframework.security: INFO

## keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${key-cloak-server-address}/realms/myrealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${key-cloak-server-address}/realms/myrealm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.external.issuer-uri=${key-cloak-server-address}/realms/myrealm
spring.security.oauth2.client.registration.external.provider=external
spring.security.oauth2.client.registration.external.client-name=myclient
spring.security.oauth2.client.registration.external.client-id=myclient
spring.security.oauth2.client.registration.external.client-secret=${keycloak-client-secret:uVRh0ufwgVdKQ830FfFLltGonMkIqBR2}
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code
